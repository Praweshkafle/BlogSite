@using System.Text.RegularExpressions;
@using System.Net;
@using global::Blog.ViewModels;
@model List<BlogModal>

<!-- Page Header-->
<style>
    .ck-editor__editable[role="textbox"] {
        /* editing area */
        min-height: 320px;
        border: none;
        box-shadow: none;
    }

        .ck-editor__editable[role="textbox"]:focus {
            /* editing area */
            box-shadow: none;
        }

    .ck.ck-editor {
        /* editing area */
        border: none;
        box-shadow: none;
    }

    .item {
        display: inline-block;
    }

    .ck-toolbar {
        border: none;
    }
</style>
<header class="masthead" style="background-image: url('assets/img/home-bg.jpg'); height:100px">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>Blog</h1>
                    <span class="subheading">Discover inspiration and stories at blog, where every post sparks creativity and captivates the mind.</span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="row m-4">
    @{
        string img = "";
        foreach (var item in Model.ToList().OrderByDescending(a => a.Id).Take(2))
        {
            if (!string.IsNullOrWhiteSpace(item.Image))
            {
                img = "/Images/Custom/" + item.Image;
            }
            else
            {
                img = "https://via.placeholder.com/200x250";
            }
            <div class="col-md-6">
                <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
                    <div class="col p-4 d-flex flex-column position-static">
                        <strong class="d-inline-block mb-2 text-primary">Featured</strong>
                        <h3 class="mb-0">@item.Title</h3>
                        <div class="mb-1 text-muted">@item.PublicationDate.ToString("MMM dd")</div>
                        @if (item.Content.Length < 30)
                        {
                            <p class="card-text mb-auto">@WebUtility.HtmlDecode(Regex.Replace(item.Content, "<[^>]*(>|$)", string.Empty))</p>
                        }
                        else
                        {
                            <p class="card-text mb-auto">@WebUtility.HtmlDecode(Regex.Replace(item.Content.Substring(0,80), "<[^>]*(>|$)", string.Empty))</p>
                        }
                        <a href="/blog/detail/@item.Id" class="stretched-link">Continue reading</a>
                    </div>
                    <div class="col-auto d-none d-lg-block">
                        <img src="@img" alt="Thumbnail" class="bd-placeholder-img" width="200" height="250">
                    </div>
                </div>
            </div>
        }
    }
</div>


<!-- Main Content-->
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">

            @{
                foreach (var item in Model)
                {
                    <!-- Post preview-->
                    <div class="post-preview">
                        <a href="/blog/detail/@item.Id">
                            <h2 class="post-title">@item.Title</h2>
                            @if (@item.Content.Length < 30)
                            {
                                <h3 class="post-subtitle">@WebUtility.HtmlDecode(Regex.Replace(item.Content, "<[^>]*(>|$)", string.Empty))</h3>
                            }
                            else
                            {
                                <h3 class="post-subtitle">@WebUtility.HtmlDecode(Regex.Replace(item.Content.Substring(0,80), "<[^>]*(>|$)", string.Empty))</h3>
                            }
                        </a>
                        <p class="post-meta">
                            Posted by
                            <a href="#!">@item.AuthorName</a>
                            on @item.PublicationDate.ToString("m");
                        </p>
                    </div>
                    <!-- Divider-->
                    <hr class="my-4" />
                }
            }


            <!-- Pager-->
            <div class="d-flex justify-content-end mb-4"><a class="btn btn-primary text-uppercase" href="#!">Older Posts →</a></div>
        </div>
    </div>


</div>
@section Scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/modalpost.js"></script>
}
